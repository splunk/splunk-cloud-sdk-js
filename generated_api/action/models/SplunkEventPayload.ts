// tslint:disable
/**
 * Action Service
 * A service that receives incoming notifications and uses pre-defined templates (action objects) to turn those notifications into meaningful actions.
 *
 * OpenAPI spec version: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from '../runtime';
/**
 * 
 * @export
 * @interface SplunkEventPayload
 */
export interface SplunkEventPayload {
    /**
     * JSON object for the event.
     * @type {any}
     * @memberof SplunkEventPayload
     */
    event: any;
    /**
     * Specifies a JSON object that contains explicit custom fields to be defined at indexing time.
     * @type {{ [key: string]: string; }}
     * @memberof SplunkEventPayload
     */
    fields: { [key: string]: string; };
    /**
     * The host value assigned to the event data. This is typically the hostname of the client from which you are sending data.
     * @type {string}
     * @memberof SplunkEventPayload
     */
    host: string;
    /**
     * The name of the index where the event data will be indexed.
     * @type {string}
     * @memberof SplunkEventPayload
     */
    index: string;
    /**
     * The source value assigned to the event data. For example, if you are sending data from an app that you are developing, set this key to the name of the app.
     * @type {string}
     * @memberof SplunkEventPayload
     */
    source: string;
    /**
     * The sourcetype value assigned to the event data.
     * @type {string}
     * @memberof SplunkEventPayload
     */
    sourcetype: string;
    /**
     * The event time. The default time format is epoch time, in the format sec.ms. For example, 1433188255.500 indicates 1433188255 seconds and 500 milliseconds after epoch.
     * @type {number}
     * @memberof SplunkEventPayload
     */
    time: number;
}

export function SplunkEventPayloadFromJSON(json: any): SplunkEventPayload {
    return {
        'event': anyFromJSON(json['event']),
        'fields': json['fields'],
        'host': json['host'],
        'index': json['index'],
        'source': json['source'],
        'sourcetype': json['sourcetype'],
        'time': json['time'],
    };
}

export function SplunkEventPayloadToJSON(value?: SplunkEventPayload): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'event': anyToJSON(value.event),
        'fields': value.fields,
        'host': value.host,
        'index': value.index,
        'source': value.source,
        'sourcetype': value.sourcetype,
        'time': value.time,
    };
}


