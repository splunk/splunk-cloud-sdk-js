// tslint:disable
/**
 * Action Service
 * A service that receives incoming notifications and uses pre-defined templates (action objects) to turn those notifications into meaningful actions.
 *
 * OpenAPI spec version: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from '../runtime';
import {
    ActionCommon,
    ActionCommonFromJSON,
    ActionCommonToJSON,
    WebhookActionMutable,
    WebhookActionMutableFromJSON,
    WebhookActionMutableToJSON,
} from './';

/**
 * 
 * @export
 * @interface WebhookAction
 */
export interface WebhookAction {
    /**
     * The name of the action. The name is one or more identifier strings separated by dots. Each identifier string consists of lower case letters, digits, and underscores, and cannot start with a digit.
     * @type {string}
     * @memberof WebhookAction
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookAction
     */
    kind: WebhookAction.KindEnum;
    /**
     * Human readable name title for the action. Must be less than 128 characters.
     * @type {string}
     * @memberof WebhookAction
     */
    title?: string;
    /**
     * Only allows the HTTPS scheme. 
     * @type {string}
     * @memberof WebhookAction
     */
    webhookUrl?: string;
    /**
     * The (possibly) templated payload body which will be POSTed to the webhookUrl when triggered. 
     * @type {string}
     * @memberof WebhookAction
     */
    webhookPayload?: string;
}

export function WebhookActionFromJSON(json: any): WebhookAction {
    return {
    // TODO: Template Change
    } as WebhookAction;

}

export function WebhookActionToJSON(value?: WebhookAction): any {
    if (value === undefined) {
        return undefined;
    }
    return {
    };
}

/**
 * @export
 * @namespace WebhookAction
 */
export namespace WebhookAction {
    /**
     * @export
     * @enum {string}
     */
    export enum KindEnum {
        Webhook = 'webhook',
        Email = 'email'
    }
}

