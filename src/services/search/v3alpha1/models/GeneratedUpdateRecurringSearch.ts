// tslint:disable
/**
 * Copyright 2021 Splunk, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"): you may
 * not use this file except in compliance with the License. You may obtain
 * a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 *
 * Splunk Search service
 * Use the Search service in Splunk Cloud Services to dispatch, review, and manage searches and search jobs. You can finalize or cancel jobs, retrieve search results, and request search-related configurations from the Metadata Catalog service in Splunk Cloud Services.
 *
 * OpenAPI spec version: v3alpha1 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    QueryParameters,
} from './';

/**
 * Disable or update a recurring search job with a new query,  time range or interval. 
 * @export
 * @interface UpdateRecurringSearch
 */
export interface UpdateRecurringSearch {
    /**
     * Specifies whether this recurring search is enabled  (runs on the specified interval) or disabled. 
     * @type {boolean}
     * @memberof UpdateRecurringSearch
     */
    enabled?: boolean;

    /**
     * The recurrence interval for the recurring search  specified with relative time specifier literals. 
     * @type {string}
     * @memberof UpdateRecurringSearch
     */
    interval?: UpdateRecurringSearchIntervalEnum;

    /**
     * The user defined name for this recurring search.
     * @type {string}
     * @memberof UpdateRecurringSearch
     */
    name?: string;

    /**
     * The query for the recurring search.
     * @type {string}
     * @memberof UpdateRecurringSearch
     */
    query?: string;

    /**
     * Represents parameters on the search job such as 'earliest'.  By default, the 'earliest' parameter is set based on the  recurrence interval. For example, if the interval is set  to '1h', the default value for 'earliest' is set to '-1h'  by the platform. The 'latest' and 'relativeTimeAnchor'  parameters are reserved. The readonly fields for recurring  searches and their values are determined by the platform. 
     * @type {QueryParameters}
     * @memberof UpdateRecurringSearch
     */
    queryParameters?: QueryParameters;

}

/**
 * @export
 */
export enum UpdateRecurringSearchIntervalEnum {
    _15m = '15m',
    _30m = '30m',
    _1h = '1h',
    _12h = '12h',
    _24h = '24h'
}

